version: '3.8'

services:
  # Production MCP Server with HTTP wrapper
  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: django-vue-mcp-server-prod
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
      - MCP_SERVER_HOST=0.0.0.0
      - MCP_SERVER_PORT=8000
    env_file:
      - .env.production
    depends_on:
      - redis
    restart: always
    networks:
      - mcp-network
    command: ["python", "src/production_mcp_server.py"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Redis Cache with persistence
  redis:
    image: redis:7-alpine
    container_name: django-vue-mcp-redis-prod
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis_prod_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf:ro
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    networks:
      - mcp-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: django-vue-mcp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/ssl/certs:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - mcp-server
    restart: always
    networks:
      - mcp-network

volumes:
  redis_prod_data:

networks:
  mcp-network:
    driver: bridge